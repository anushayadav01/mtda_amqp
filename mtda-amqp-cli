#!/usr/bin/env python3

import pika
from mtda_amqp.main import MTDA_AMQP
from mtda_amqp.client import Client

class MTDA_Application:
    def __init__(self):
        self.agent = None
        self.remote = "localhost"
        self.logfile = "/var/log/mtda.log"
        self.pidfile = "/var/run/mtda.pid"
        self.exiting = False
        self.channel = "console"
    
    def target_off(self, args=None):
        status = self.agent.call("target_off")

    def target_on(self, args=None):
        status = self.agent.call("target_on")

    def target_cmd(self, args):
        if len(args) > 0:
            cmd = args[0]
            args.pop(0)

            cmds = {
               'off': self.target_off,
               'on': self.target_on,
            }

            if cmd in cmds:
                return cmds[cmd](args)
            else:
                print("unknown target command '%s'!" % (cmd), file=sys.stderr)
                return 1


    def main(self):
        config = None
        daemonize = False
        detach = True

        options, stuff = getopt.getopt(
            sys.argv[1:], 'c:dhnr:v',
            ['daemon', 'help', 'no-detach', 'remote=', 'version'])
        for opt, arg in options:
            if opt in ('-c', '--config'):
                config = arg
            if opt in ('-d', '--daemon'):
                daemonize = True
            if opt in ('-h', '--help'):
                self.help_cmd()
                sys.exit(0)
            if opt in ('-n', '--no-detach'):
                detach = False
            if opt in ('-r', '--remote'):
                self.remote = arg
            if opt in ('-v', '--version'):
                self.print_version()
                sys.exit(0)
       
            if daemonize is True:
                self.agent = MTDA_AMQP()
                self.agent.run_server()

        if len(stuff) == 0:
            stuff = ['target', 'on']    
        cmd = stuff[0]
        stuff.pop(0)
        
        cmds = {
            'target': self.target_cmd,
            'console': self.console_cmd,
            }
        if cmd in cmds:
            if cmd != 'help':
                self.agent = Client(self.remote)
                status = cmds[cmd](stuff)
        else:
            print("unknown command '%s'!" % (cmd), file=sys.stderr)
            sys.exit(1)

if __name__ == '__main__':

    mtda_rpc=MTDA_Application()
    mtda_rpc.main()

